# CortexOS - GPU-Accelerated Cognitive Architecture System
# NVIDIA CUDA enabled for neural processing acceleration

FROM nvidia/cuda:12.3.1-cudnn9-runtime-ubuntu22.04 as base

# Prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive

# Install Python 3.11 and system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.11 \
    python3.11-dev \
    python3-pip \
    python3.11-venv \
    build-essential \
    git \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.11 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

# Upgrade pip
RUN python3 -m pip install --no-cache-dir --upgrade pip setuptools wheel

# Builder stage for dependencies
FROM base as builder

WORKDIR /build

# Copy requirements
COPY requirements.txt requirements-gpu.txt ./

# Install Python dependencies including GPU packages
RUN pip install --no-cache-dir --user -r requirements.txt && \
    pip install --no-cache-dir --user -r requirements-gpu.txt

# Production stage
FROM base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    CORTEXOS_ROOT=/app \
    DATA_DIR=/app/data \
    LOGS_DIR=/app/logs \
    CONFIG_DIR=/app/config \
    TEMP_DIR=/app/temp \
    CACHE_DIR=/app/cache \
    CUDA_VISIBLE_DEVICES=0 \
    NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=compute,utility \
    LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH} \
    PATH=/usr/local/cuda/bin:${PATH}

# Create non-root user
RUN useradd -m -u 1000 cortexos && \
    mkdir -p /app && \
    chown -R cortexos:cortexos /app

# Set working directory
WORKDIR /app

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/cortexos/.local

# Copy application code
COPY --chown=cortexos:cortexos . /app/

# Create necessary directories with proper permissions
RUN mkdir -p \
    /app/data \
    /app/logs \
    /app/config \
    /app/temp \
    /app/cache \
    /app/neural_data/phase1 \
    /app/neural_data/phase2 \
    /app/neural_data/phase3 \
    /app/neural_data/phase4 \
    /app/neural_data/phase5 \
    /app/neural_data/phase6 \
    /app/storage/contracts \
    /app/storage/cube_storage \
    /app/temp/batch_staging \
    /app/temp/ingestion_queue \
    /app/temp/output_queue \
    /app/temp/processing \
    /app/temp/stream_buffers \
    /app/backups \
    /app/recovery \
    /app/checkpoints \
    /app/archives \
    /app/metrics \
    /app/analytics \
    /app/reports \
    /app/alerts \
    /app/models \
    /app/gpu_cache && \
    chown -R cortexos:cortexos /app && \
    chmod -R 755 /app

# Switch to non-root user
USER cortexos

# Update PATH to include user-installed packages
ENV PATH=/home/cortexos/.local/bin:$PATH

# Expose ports
EXPOSE 8080 8081

# GPU health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python3 -c "import torch; assert torch.cuda.is_available(), 'CUDA not available'; print(f'GPU: {torch.cuda.get_device_name(0)}'); import sys; sys.exit(0)"

# Default command
CMD ["python3", "1_supervisor.py", "--gpu"]
